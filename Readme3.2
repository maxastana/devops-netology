1. Какого типа команда cd? Попробуйте объяснить, почему она именно такого типа; опишите ход своих мыслей, если считаете что она могла бы быть другого типа.
----------------------------------------------------------------------------------------------------------------------------------------------------------
Ответ: 
Это команда встройенная.
можно сделать CD внешней программой, но после смены деректории необходимо вызвать bash из этого (нового каталога), но тогда мы получим новый shell.
========================================================================================================================
2. Какая альтернатива без pipe команде grep <some_string> <some_file> | wc -l? man grep поможет в ответе на этот вопрос. 
    Ознакомьтесь с документом о других подобных некорректных вариантах использования pipe.
------------------------------------------------------------------------------------------------------------------------
Ответ: 

root@vagrant:/tmp# cat test
Privet
Medved
1234567890

root@vagrant:/tmp# grep 12345 test -c
1

root@vagrant:/tmp# grep 12345 test | wc -l
1
=========================================================================================================================
3 .Какой процесс с PID 1 является родителем для всех процессов в вашей виртуальной машине Ubuntu 20.04?
-------------------------------------------------------------------------------------------------------------------------
Ответ:

vagrant@vagrant:/$ pstree -p
systemd(1)─┬─VBoxService(807)─┬─{VBoxService}(809)
           │                  ├─{VBoxService}(810)
           │                  ├─{VBoxService}(811)
           │                  ├─{VBoxService}(812)
           │                  ├─{VBoxService}(813)
           │                  ├─{VBoxService}(814)
           │                  ├─{VBoxService}(815)
           │                  └─{VBoxService}(816)	   
===========================================================================================================================
4. Как будет выглядеть команда, которая перенаправит вывод stderr ls на другую сессию терминала?
--------------------------------------------------------------------------------------------------------------------------
Ответ:
Из pts/0:
vagrant@vagrant:~$ ls -l \root 2>/dev/pts/1
vagrant@vagrant:~$ 
    
Из pts/1:    

vagrant@vagrant:~$ who
vagrant  pts/0        2021-11-22 21:00 (10.0.2.2)
vagrant  pts/1        2021-11-22 21:04 (10.0.2.2)
vagrant@vagrant:~$ ls: cannot access 'root': No such file or directory
===========================================================================================================================
5. Получится ли одновременно передать команде файл на stdin и вывести ее stdout в другой файл? Приведите работающий пример.
---------------------------------------------------------------------------------------------------------------------------
Ответ:

root@vagrant:/tmp# cat test
Privet
Medved
1234567890
root@vagrant:/tmp# cat test > test2
root@vagrant:/tmp# ls
systemd-private-fdc26f84972f4ee69d118ba3b9b00bc6-fwupd.service-kPXGrh             test
systemd-private-fdc26f84972f4ee69d118ba3b9b00bc6-systemd-logind.service-HGOKri    test2
systemd-private-fdc26f84972f4ee69d118ba3b9b00bc6-systemd-resolved.service-luPDNf
root@vagrant:/tmp# cat test2
Privet
Medved
1234567890
root@vagrant:/tmp#
==============================================================================================================================================
6. Получится ли находясь в графическом режиме, вывести данные из PTY в какой-либо из эмуляторов TTY? Сможете ли вы наблюдать выводимые данные?
-----------------------------------------------------------------------------------------------------------------------------------------------
Ответ:
echo Hello >/dev/tty1
Нужно переключиться в контекст TTY 

==============================================================================================================================================
7. Выполните команду bash 5>&1. К чему она приведет? Что будет, если вы выполните echo netology > /proc/$$/fd/5? Почему так происходит?
-----------------------------------------------------------------------------------------------------------------------------------------------
Ответ:
bash 5>&1 - Создаст дескриптор с 5 и перенаправит его в stdout
echo netology > /proc/$$/fd/5 - выведет в дескриптор "5", который был пернеаправлен в stdout

если запустить echo netology > /proc/$$/fd/5 в новой сесии, получим ошибку, так как такого дескриптора нет на данный момент в новой сесии.
    
vagrant@vagrant:~$ echo netology > /proc/$$/fd/5
-bash: /proc/1096/fd/5: No such file or directory
vagrant@vagrant:~$ bash 5>&1
vagrant@vagrant:~$ echo netology > /proc.$$/fd/5
bash: /proc.1114/fd/5: No such file or directory
vagrant@vagrant:~$ echo netology > /proc/$$/fd/5
netology
================================================================================================================================================
8. Получится ли в качестве входного потока для pipe использовать только stderr команды, не потеряв при этом отображение stdout на pty? Напоминаем: по умолчанию через pipe передается только stdout команды слева от | на stdin команды справа. Это можно сделать, поменяв стандартные потоки местами через промежуточный новый дескриптор, который вы научились создавать в предыдущем вопросе.
----------------------------------------------------------------------------------------------------------------------------------------
Ответ:
vagrant@vagrant:~/tmp$ ls -l /root 9>&2 2>&1 1>&9 | grep denied -c
1
vagrant@vagrant:~/tmp$

9>&2 - дескриптор перенаправили в stderr
2>&1 - stderr перенаправили в stdout 
1>&9 - stdout - перенаправили в в новый дескриптор
=============================================================================================================================================
9. Что выведет команда cat /proc/$$/environ? Как еще можно получить аналогичный по содержанию вывод?
---------------------------------------------------------------------------------------------------------------------------------------------------------
Ответ:
Будут выведены переменные окружения:
Аналогичный вывод:
printenv
env
==========================================================================================================================================================
10. Используя man, опишите что доступно по адресам /proc/<PID>/cmdline, /proc/<PID>/exe.
-------------------------------------------------------------------------------------------------------------------------------------------
 Ответ:
 proc/<PID>/cmdline - полный путь до исполняемого файла процесса [PID]  (строка 236)
/proc/<PID>/exe - содержит ссылку до файла запущенного для процесса [PID], 
cat выведет содержимое запущенного файла, 
запуск этого файла,  запустит еще одну копию самого файла  (строка 287)
=============================================================================================================================================================
11. Узнайте, какую наиболее старшую версию набора инструкций SSE поддерживает ваш процессор с помощью /proc/cpuinfo.
--------------------------------------------------------------------------------------------------------------------------------------------------
 Ответ:
 grep sse /proc/cpuinfo
 sse4_2 
 =================================================================================================================================================================
 12. При открытии нового окна терминала и vagrant ssh создается новая сессия и выделяется pty. Это можно подтвердить командой tty, которая упоминалась в лекции 3.2. Однако:
     vagrant@netology1:~$ ssh localhost 'tty'
     not a tty
Почитайте, почему так происходит, и как изменить поведение.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Ответ: 
 В подключении ожидается пользователь, а не другой процесс, и нет локального tty в данный момент. 
для запуска можно добавить -t - , и команда исполняется c принудительным созданием псевдотерминала
=======================================================================================================================================================================
13. Бывает, что есть необходимость переместить запущенный процесс из одной сессии в другую. Попробуйте сделать это, воспользовавшись reptyr. 
Например, так можно перенести в screen процесс, который вы запустили по ошибке в обычной SSH-сессии.
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Ответ: 
При первых запусках ругался на права, 10-patrace.conf
после установки заначения  kernel.yama.ptrace_scope = 0
после чего процесс был перехвачен в screen, и продолжил работу после закрытия терминала. 
единственное в pstree процесс не отображался, точнее оботражался в виде процесса reptyr. не сразу сообразил что это то, что нужно 
=========================================================================================================================================================================
14. sudo echo string > /root/new_file не даст выполнить перенаправление под обычным пользователем, так как перенаправлением занимается процесс shell'а, который запущен без sudo под вашим пользователем. Для решения данной проблемы можно использовать конструкцию echo string | sudo tee /root/new_file. Узнайте что делает команда tee и почему в отличие от sudo echo команда с sudo tee будет работать.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Ответ:
команда tee делает вывод одновременно и в файл, указаный в качестве параметра, и в stdout.
В данном примере команда получает вывод из stdin, перенаправленный через pipe от stdout команды echo
и так как команда запущена от sudo , соотвественно имеет права на запись в файл.







